// ==UserScript==
// @name         Commercial Stops Cortex
// @version      2.0
// @description  try to take over the world!
// @author       You
// @match        https://logistics.amazon.com/operations/execution/*
// @connect      mercury-webserver-na-iad.iad.proxy.amazon.com
// @grant        GM_xmlhttpRequest
// @downloadURL  https://axzile.corp.amazon.com/-/carthamus/download_script/commercial-stops-cortex.user.js
// @updateURL    https://axzile.corp.amazon.com/-/carthamus/download_script/commercial-stops-cortex.user.js
// ==/UserScript==
//v1.0 added commercial stops when viewing routes
//v1.1 added scheduling enforcement
//v1.12 added to work with different timezones
//v1.13 fixed bugs
//v1.14 fixed update bugs
//v.141 fixed bugs with 1.14 lol
//v.143 fixed bugs with new version of tampermonkey
//v2.0 changed js file location and updated to 2.0 because of crappy version number...

(function () {
    'use strict';


    //var btnScript = document.createElement('BUTTON');
    //debugger;

    var lastUrl;
    //lastUrl = document.URL.split("?")[0];

    // Select the node that will be observed for mutations
    const targetNode = document.getElementById("main");

    // Options for the observer (which mutations to observe)
    const config = { childList: true, subtree: true };

    // Callback function to execute when mutations are observed
    const callback = function(mutationsList, observer) {

        var ele, sw;
        if (document.URL.split("?")[0] == "https://logistics.amazon.com/operations/execution/routes")
        {
            ele = ".routes-list";
            sw = true;
        }
        else
        {
            ele = ".stops-list-item";
            sw = false;
        }
        if (document.querySelectorAll(ele)[0]) {

            observer.disconnect();
            initialize(sw);
            lastUrl = document.URL.split("?")[0];
        };
    };


    /* These are the modifications: */
    history.pushState = ( f => function pushState(){
        var ret = f.apply(this, arguments);
        window.dispatchEvent(new Event('pushstate'));
        window.dispatchEvent(new Event('locationchange'));
        return ret;
    })(history.pushState);
